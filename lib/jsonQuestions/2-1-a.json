{
  "id": "7",
  "slug": "algorithms",
  "name": "Algorithms",
  "description": "Learn about algorithms, computational thinking, and problem-solving",
  "icon": "Code",
  "questionCount": 27,
  "questions": [
    {
      "id": "a1",
      "topic": "algorithms",
      "question_text": "A teacher wants to search through a list of student names to see if a particular student is in the class. Write an algorithm that uses a linear search to do this.",
      "model_answer": "function searchStudent(name)\n  for i = 0 to classList.length - 1\n    if classList[i] == name then\n      return True\n    endif\n  next i\n  return False\nendfunction",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "code"
    },
    {
      "id": "a2",
      "topic": "algorithms",
      "question_text": "Write an algorithm to check if a temperature value entered by a user is within the valid range of -10 to 50 degrees. Output VALID or NOT VALID.",
      "model_answer": "temp = input(\"Enter temperature\")\nif temp >= -10 and temp <= 50 then\n  print(\"VALID\")\nelse\n  print(\"NOT VALID\")\nendif",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "code"
    },
    {
      "id": "a3",
      "topic": "algorithms",
      "question_text": "Write an algorithm that asks a user to input numbers until the total goes over 100. After each number is entered, output the running total.",
      "model_answer": "total = 0\nwhile total <= 100\n  number = input(\"Enter a number\")\n  total = total + number\n  print(total)\nendwhile",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "code"
    },
    {
      "id": "a4",
      "topic": "algorithms",
      "question_text": "Give one reason why an algorithm might use a loop.",
      "model_answer": "To repeat a set of instructions multiple times, such as checking each item in a list.",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "short-answer"
    },
    {
      "id": "a5",
      "topic": "algorithms",
      "question_text": "Define the term abstraction in the context of algorithm design.",
      "model_answer": "Abstraction means removing unnecessary detail to focus on the important parts of a problem.",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "short-answer"
    },
    {
      "id": "a6",
      "topic": "algorithms",
      "question_text": "State the most appropriate data type for each of the following:\n\na) The number of books in a school library\nb) Whether a student is present or absent\nc) The title of a book\n",
      "model_answer": "a) Integer\nb) Boolean\nc) String",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "short-answer"
    },
    {
      "id": "a7",
      "topic": "algorithms",
      "question_text": "State the most appropriate data type for each of the following:\n\na) The average score in a maths test\nb) A student's home address\nc) Whether a light is on or off",
      "model_answer": "a) Real\nb) String\nc) Boolean",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "short-answer"
    },
    {
      "id": "a8",
      "topic": "algorithms",
      "question_text": "State the most appropriate data type for each of the following:\n\na) A person's shoe size (e.g. 7, 8.5)\nb) A list of usernames\nc) Whether a password is correct or not",
      "model_answer": "a) Real\nb) Array (of Strings)\nc) Boolean",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "short-answer"
    },
    {
      "id": "a9",
      "topic": "algorithms",
      "question_text": "State the most appropriate data type for each of the following:\n\na) The number of minutes in a video\nb) The title of the video\nc) Whether subtitles are enabled",
      "model_answer": "a) Integer\nb) String\nc) Boolean",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "short-answer"
    },
    {
      "id": "a10",
      "topic": "algorithms",
      "question_text": "A program asks users to enter their age (between 1 and 100). Give one example of:\n\na) A normal test value\nb) A boundary test value\nc) An erroneous test value",
      "model_answer": "a) 25 (normal)\nb) 1 or 100 (boundary)\nc) -5 or 'abc' (erroneous)",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "short-answer"
    },
    {
      "id": "a11",
      "topic": "algorithms",
      "question_text": "A program accepts integers between 10 and 20 inclusive. Give three suitable test inputs and state what type of test each one is.",
      "model_answer": "10 (boundary), 15 (normal), 25 (erroneous)",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "short-answer"
    },
    {
      "id": "a12",
      "topic": "algorithms",
      "question_text": "State why it is important to include boundary test data when testing a program.",
      "model_answer": "To check that the program correctly handles values at the edge of the acceptable input range.",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "short-answer"
    },
    {
      "id": "a13",
      "topic": "algorithms",
      "question_text": "What is meant by the term erroneous test data?",
      "model_answer": "Test data that is outside the valid range or the wrong data type, used to check that the program handles errors correctly.",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "short-answer"
    },
    {
      "id": "a14",
      "topic": "algorithms",
      "question_text": "A table called `Students` contains the fields `FirstName`, `LastName`, `Age`, and `FormGroup`.\n\nWrite an SQL statement to display all records for students in form group '10A'.",
      "model_answer": "SELECT * FROM Students WHERE FormGroup = '10A';",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "short-answer"
    },
    {
      "id": "a15",
      "topic": "algorithms",
      "question_text": "The table `Books` contains the fields `Title`, `Author`, and `YearPublished`.\n\nWrite an SQL query to show the `Title` and `Author` of books published after the year 2010.",
      "model_answer": "SELECT Title, Author FROM Books WHERE YearPublished > 2010;",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "short-answer"
    },
    {
      "id": "a16",
      "topic": "algorithms",
      "question_text": "A table named `Orders` has the fields `OrderID`, `CustomerName`, and `TotalAmount`.\n\nWrite an SQL query to display only orders with a `TotalAmount` greater than 100.",
      "model_answer": "SELECT * FROM Orders WHERE TotalAmount > 100;",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "short-answer"
    },
    {
      "id": "a17",
      "topic": "algorithms",
      "question_text": "The table `Results` contains the fields `StudentName`, `Subject`, and `Score`.\n\nWrite an SQL statement to show the names of students who scored exactly 100.",
      "model_answer": "SELECT StudentName FROM Results WHERE Score = 100;",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "short-answer"
    },
    {
      "id": "a18",
      "topic": "algorithms",
      "question_text": "A table `Products` has fields `ProductName`, `Category`, and `Price`.\n\nWrite an SQL statement to show all products in the 'Electronics' category that cost less than 50.",
      "model_answer": "SELECT * FROM Products WHERE Category = 'Electronics' AND Price < 50;",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "short-answer"
    },
    {
      "id": "a19",
      "type": "matching",
      "topic": "algorithms",
      "question_text": "Match each type of test data to its correct description:",
      "pairs": [
        { "statement": "Normal", "match": "A value that is expected and within the valid range" },
        { "statement": "Boundary", "match": "A value at the edge of the valid range" },
        { "statement": "Erroneous", "match": "A value that is invalid or outside the expected range" }
      ],
      "model_answer": [
        "A value that is expected and within the valid range",
        "A value at the edge of the valid range",
        "A value that is invalid or outside the expected range"
      ],
      "explanation": "These types of test data are used to ensure a program behaves correctly in different input scenarios.",
      "created_at": "2025-05-08T00:00:00Z"
    },
    {
      "id": "a20",
      "type": "matching",
      "topic": "algorithms",
      "question_text": "Match each principle of computational thinking to its correct description:",
      "pairs": [
        { "statement": "Abstraction", "match": "Removing unnecessary detail to focus on what's important" },
        { "statement": "Decomposition", "match": "Breaking a problem down into smaller, manageable parts" },
        { "statement": "Algorithmic thinking", "match": "Creating a clear, step-by-step solution to a problem" }
      ],
      "model_answer": [
        "Removing unnecessary detail to focus on what's important",
        "Breaking a problem down into smaller, manageable parts",
        "Creating a clear, step-by-step solution to a problem"
      ],
      "explanation": "These principles help programmers solve problems in a logical and structured way.",
      "created_at": "2025-05-08T00:00:00Z"
    },
    {
      "id": "a21",
      "type": "matching",
      "topic": "algorithms",
      "question_text": "Match each example to the computational thinking principle it demonstrates:",
      "pairs": [
        { "statement": "Ignoring colour and font to focus on webpage structure", "match": "Abstraction" },
        { "statement": "Splitting a game into levels, controls, and scoring systems", "match": "Decomposition" },
        { "statement": "Planning the steps a robot must take to cross a maze", "match": "Algorithmic thinking" }
      ],
      "model_answer": [
        "Abstraction",
        "Decomposition",
        "Algorithmic thinking"
      ],
      "explanation": "Each example shows how different computational thinking principles are applied in practice.",
      "created_at": "2025-05-08T00:00:00Z"
    },
    {
      "id": "a22",
      "topic": "algorithms",
      "question_text": "This code is meant to check if a number is even:\n\nnumber = 6\nif number div 2 == 0:\n    print(\"Even\")\n\nIdentify the logic error and suggest a fix.",
      "model_answer": "The 'div' operator gives the result of division, not the remainder. 'mod' should be used to check even numbers. Fix: 'if number mod 2 == 0:'",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "short-answer"
    },
    {
      "id": "a23",
      "topic": "algorithms",
      "question_text": "The following code is meant to output numbers from 1 to 5:\n\ni = 1\nwhile i < 5:\n    print(i)\n    i = i - 1\n\nExplain the logic error.",
      "model_answer": "The loop decreases i, so it will never reach 5. It creates an infinite loop. Fix: use 'i = i + 1'.",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "short-answer"
    },
    {
      "id": "a24",
      "topic": "algorithms",
      "question_text": "The program is meant to add two numbers entered by the user:\n\na = input(\"Enter first number\")\nb = input(\"Enter second number\")\nprint(a + b)\n\nDescribe the logic error and give a fix.",
      "model_answer": "The inputs are strings, so it concatenates them instead of adding. Fix: convert inputs to integers using 'int()'.",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "short-answer"
    },
    {
      "id": "a25",
      "topic": "algorithms",
      "question_text": "The code below is meant to print \"Correct\" if the user enters the password \"admin\":\n\npassword = input(\"Enter password\")\nif password = \"admin\":\n    print(\"Correct\")\n\nIdentify the error and suggest a fix.",
      "model_answer": "The '=' operator is used instead of '=='. Fix: change to 'if password == \"admin\"'.",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "short-answer"
    },
    {
      "id": "a26",
      "topic": "algorithms",
      "question_text": "This code should output \"Even\" if the number is divisible by 2:\n\nnum = 4\nif num % 2 = 0:\n    print(\"Even\")\n\nIdentify the syntax error and fix it.",
      "model_answer": "'=' is used instead of '=='. Fix: 'if num % 2 == 0:'",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "short-answer"
    },
    {
      "id": "a27",
      "topic": "algorithms",
      "question_text": "The program should print \"Too low\" if the number is less than 5:\n\nnum = 3\nif num > 5:\n    print(\"Too low\")\n\nIdentify the logic error and fix it.",
      "model_answer": "The operator should be '<' not '>'. Fix: 'if num < 5:'",
      "created_at": "2025-05-08T00:00:00Z",
      "type": "short-answer"
    }
  ],
  "unit": 2,
  "disabled": false
}