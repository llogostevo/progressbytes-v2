{
    "id": "11",
    "slug": "languages-and-idEs",
    "name": "Languages & IDEs",
    "description": "Explore programming languages, translators, and development environments",
    "icon": "Terminal",
    "questionCount": 13,
    "questions": [
      {
        "id": "l1",
        "type": "text",
        "topic": "languages-and-idEs",
        "question_text": "State two reasons why developers might choose to use a low-level language.",
        "model_answer": "1) Provides faster execution and better performance.\n2) Enables precise control over system resources like memory and hardware.",
        "created_at": "2025-05-05T00:00:00Z"
      },
      {
        "id": "l2",
        "type": "short-answer",
        "topic": "languages-and-idEs",
        "question_text": "Explain why using a compiler can be beneficial compared to an interpreter.",
        "model_answer": "Compiled programs run independently of the compiler and execute more quickly. They are also harder to reverse-engineer and allow error checking before execution.",
        "created_at": "2025-05-05T00:00:00Z"
      },
      {
        "id": "l3",
        "type": "short-answer",
        "topic": "languages-and-idEs",
        "question_text": "Give two reasons why a programmer might prefer to use a high-level language.",
        "model_answer": "1) High-level code is easier to understand and maintain.\n2) High-level code is platform-independent and can be used on different systems.",
        "created_at": "2025-05-05T00:00:00Z"
      },
      {
        "id": "l4",
        "type": "matching",
        "topic": "languages-and-idEs",
        "question_text": "Match each characteristic with Compiler, Interpreter, or Both:",
        "pairs": [
          { "statement": "Changes source code to low-level instructions", "match": "Both" },
          { "statement": "Creates a file that runs on its own", "match": "Compiler" },
          { "statement": "Needs to retranslate each time the code runs", "match": "Interpreter" }
        ],
        "explanation": "Both compilers and interpreters convert source code into machine-readable instructions. A compiler translates the entire program at once and creates an executable file, whereas an interpreter re-translates code every time it runs, line-by-line.",
        "model_answer": ["Both", "Compiler", "Interpreter"],
        "created_at": "2025-05-05T00:00:00Z"
      },
      {
        "id": "l5",
        "type": "matching",
        "topic": "languages-and-idEs",
        "question_text": "Match each description to either High-level or Low-level language:",
        "pairs": [
          { "statement": "Works on multiple types of computers", "match": "High-level" },
          { "statement": "Allows control of system memory directly", "match": "Low-level" },
          { "statement": "Easier to read using words like if and print", "match": "High-level" },
          { "statement": "Needs translation before it can run", "match": "High-level" }
        ],
        "explanation": "High-level languages are easier to write due to their English-like syntax. They are portable across different systems. Low-level languages, while harder to read, give direct control over memory and are tailored to specific hardware.",
        "model_answer": ["High-level", "Low-level", "High-level", "High-level"],
        "created_at": "2025-05-05T00:00:00Z"
      },
      {
        "id": "l6",
        "type": "fill-in-the-blank",
        "topic": "languages-and-idEs",
        "question_text": "Complete the sentences about how code is executed:\n\nLena writes her program in a ______ language. This must be translated into machine code. An interpreter reads one line at a time and ______ when it encounters an error. A compiler creates an ______ file that can run ______ the compiler.",
        "model_answer": ["high-level", "stops", "executable", "without"],
        "options": ["high-level", "low-level", "stops", "continues", "executable", "debug", "without", "with"],
        "created_at": "2025-05-05T00:00:00Z"
      },
      {
        "id": "l7",
        "type": "short-answer",
        "topic": "languages-and-idEs",
        "question_text": "Why does high-level code need to be translated before it can run on a computer?",
        "model_answer": "Because processors can only execute instructions written in binary machine code.",
        "created_at": "2025-05-05T00:00:00Z"
      },
      {
        "id": "l8",
        "type": "short-answer",
        "topic": "languages-and-idEs",
        "question_text": "Outline two key differences between how a compiler and an interpreter work.",
        "model_answer": "1) A compiler translates all the code at once and saves a file to run later.\n2) An interpreter translates and runs each line individually and stops if an error occurs.",
        "created_at": "2025-05-05T00:00:00Z"
      },
      {
        "id": "l9",
        "type": "matching",
        "topic": "languages-and-idEs",
        "question_text": "Match each feature to High-level or Low-level language:",
        "pairs": [
          { "statement": "Includes commands like while and input", "match": "High-level" },
          { "statement": "Must be translated for the processor to understand", "match": "High-level" },
          { "statement": "Can be run on many types of computer hardware", "match": "High-level" },
          { "statement": "Needs knowledge of hardware architecture", "match": "Low-level" }
        ],
        "model_answer": ["High-level", "High-level", "High-level", "Low-level"],
        "explanation": "High-level languages are easier to write due to their English like form. This makes them easier to maintain. They are also hardware-independent, as long as you have the translator they can be used on any machine/processor. Low-level languages require an understanding of processor structure and are more hardware-specific, this does make them more efficient in some cases as you can design specifically for that device, they might be used in embedded systems.",
        "created_at": "2025-05-05T00:00:00Z"
      },
      {
        "id": "l10",
        "type": "short-answer",
        "topic": "languages-and-idEs",
        "question_text": "Name two tools commonly available in a development environment (IDE).",
        "model_answer": "1) Code editor - for writing and managing program code.\n2) Debugging tool - for finding and fixing issues in the code.",
        "created_at": "2025-05-05T00:00:00Z"
      },
      {
        "id": "l11",
        "type": "short-answer",
        "topic": "languages-and-idEs",
        "question_text": "List two features of an IDE that help when building a program to calculate a value.",
        "model_answer": "1) Error detection features like syntax highlighting.\n2) The ability to run and test the program directly.",
        "created_at": "2025-05-05T00:00:00Z"
      },
      {
        "id": "l12",
        "type": "true-false",
        "topic": "languages-and-idEs",
        "question_text": "A compiler translates code line-by-line each time a program is run.",
        "model_answer": "false",
        "explanation": "A compiler translates the whole program into machine code before it runs. An interpreter is the tool that translates and executes code line-by-line during program execution.",
        "created_at": "2025-05-05T00:00:00Z"
      },
      {
        "id": "l13",
        "type": "multiple-choice",
        "topic": "languages-and-idEs",
        "question_text": "Why do computers need translators to run programs written in high-level languages?",
        "options": [
          "High-level languages use too much memory",
          "Processors only understand binary instructions",
          "Compilers are faster than interpreters",
          "Code written by users needs to be checked"
        ],
        "correctAnswerIndex": 1,
        "explanation": "High-level languages use words and symbols that humans can understand but processors cannot. They must be translated into binary machine code using a compiler or interpreter so that the processor can execute the instructions.",
        "model_answer": "Processors only understand binary instructions",
        "created_at": "2025-05-05T00:00:00Z"
      }
    ],
    "unit": 2,
    "disabled": false
}