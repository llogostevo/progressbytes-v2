id,slug,name,description,icon,questionCount,unit,disabled,question_id,question_type,question_topic,question_text,model_answer,created_at,explanation,options,pairs,correctAnswerIndex
11,languages-and-idEs,Languages & IDEs,Explore programming languages translators and development environments,Terminal,13,2,false,l1,text,languages-and-idEs,"State two reasons why developers might choose to use a low-level language.","1) Provides faster execution and better performance.
2) Enables precise control over system resources like memory and hardware.",2025-05-05T00:00:00Z,,,
11,languages-and-idEs,Languages & IDEs,Explore programming languages translators and development environments,Terminal,13,2,false,l2,short-answer,languages-and-idEs,"Explain why using a compiler can be beneficial compared to an interpreter.","Compiled programs run independently of the compiler and execute more quickly. They are also harder to reverse-engineer and allow error checking before execution.",2025-05-05T00:00:00Z,,,
11,languages-and-idEs,Languages & IDEs,Explore programming languages translators and development environments,Terminal,13,2,false,l3,short-answer,languages-and-idEs,"Give two reasons why a programmer might prefer to use a high-level language.","1) High-level code is easier to understand and maintain.
2) High-level code is platform-independent and can be used on different systems.",2025-05-05T00:00:00Z,,,
11,languages-and-idEs,Languages & IDEs,Explore programming languages translators and development environments,Terminal,13,2,false,l4,matching,languages-and-idEs,"Match each characteristic with Compiler Interpreter or Both:",["Both" "Compiler" "Interpreter"],2025-05-05T00:00:00Z,"Both compilers and interpreters convert source code into machine-readable instructions. A compiler translates the entire program at once and creates an executable file whereas an interpreter re-translates code every time it runs line-by-line.",,"[{""statement"":""Changes source code to low-level instructions"" ""match"":""Both""} {""statement"":""Creates a file that runs on its own"" ""match"":""Compiler""} {""statement"":""Needs to retranslate each time the code runs"" ""match"":""Interpreter""}]",
11,languages-and-idEs,Languages & IDEs,Explore programming languages translators and development environments,Terminal,13,2,false,l5,matching,languages-and-idEs,"Match each description to either High-level or Low-level language:",["High-level" "Low-level" "High-level" "High-level"],2025-05-05T00:00:00Z,"High-level languages are easier to write due to their English-like syntax. They are portable across different systems. Low-level languages while harder to read give direct control over memory and are tailored to specific hardware.",,"[{""statement"":""Works on multiple types of computers"" ""match"":""High-level""} {""statement"":""Allows control of system memory directly"" ""match"":""Low-level""} {""statement"":""Easier to read using words like if and print"" ""match"":""High-level""} {""statement"":""Needs translation before it can run"" ""match"":""High-level""}]",
11,languages-and-idEs,Languages & IDEs,Explore programming languages translators and development environments,Terminal,13,2,false,l6,fill-in-the-blank,languages-and-idEs,"Complete the sentences about how code is executed:

Lena writes her program in a ______ language. This must be translated into machine code. An interpreter reads one line at a time and ______ when it encounters an error. A compiler creates an ______ file that can run ______ the compiler.",["high-level" "stops" "executable" "without"],2025-05-05T00:00:00Z,,"[""high-level"" ""low-level"" ""stops"" ""continues"" ""executable"" ""debug"" ""without"" ""with""]",
11,languages-and-idEs,Languages & IDEs,Explore programming languages translators and development environments,Terminal,13,2,false,l7,short-answer,languages-and-idEs,"Why does high-level code need to be translated before it can run on a computer?","Because processors can only execute instructions written in binary machine code.",2025-05-05T00:00:00Z,,,
11,languages-and-idEs,Languages & IDEs,Explore programming languages translators and development environments,Terminal,13,2,false,l8,short-answer,languages-and-idEs,"Outline two key differences between how a compiler and an interpreter work.","1) A compiler translates all the code at once and saves a file to run later.
2) An interpreter translates and runs each line individually and stops if an error occurs.",2025-05-05T00:00:00Z,,,
11,languages-and-idEs,Languages & IDEs,Explore programming languages translators and development environments,Terminal,13,2,false,l9,matching,languages-and-idEs,"Match each feature to High-level or Low-level language:",["High-level" "High-level" "High-level" "Low-level"],2025-05-05T00:00:00Z,"High-level languages are easier to write due to their English like form. This makes them easier to maintain. They are also hardware-independent as long as you have the translator they can be used on any machine/processor. Low-level languages require an understanding of processor structure and are more hardware-specific this does make them more efficient in some cases as you can design specifically for that device they might be used in embedded systems.",,"[{""statement"":""Includes commands like while and input"" ""match"":""High-level""} {""statement"":""Must be translated for the processor to understand"" ""match"":""High-level""} {""statement"":""Can be run on many types of computer hardware"" ""match"":""High-level""} {""statement"":""Needs knowledge of hardware architecture"" ""match"":""Low-level""}]",
11,languages-and-idEs,Languages & IDEs,Explore programming languages translators and development environments,Terminal,13,2,false,l10,short-answer,languages-and-idEs,"Name two tools commonly available in a development environment (IDE).","1) Code editor - for writing and managing program code.
2) Debugging tool - for finding and fixing issues in the code.",2025-05-05T00:00:00Z,,,
11,languages-and-idEs,Languages & IDEs,Explore programming languages translators and development environments,Terminal,13,2,false,l11,short-answer,languages-and-idEs,"List two features of an IDE that help when building a program to calculate a value.","1) Error detection features like syntax highlighting.
2) The ability to run and test the program directly.",2025-05-05T00:00:00Z,,,
11,languages-and-idEs,Languages & IDEs,Explore programming languages translators and development environments,Terminal,13,2,false,l12,true-false,languages-and-idEs,"A compiler translates code line-by-line each time a program is run.",false,2025-05-05T00:00:00Z,"A compiler translates the whole program into machine code before it runs. An interpreter is the tool that translates and executes code line-by-line during program execution.",,
11,languages-and-idEs,Languages & IDEs,Explore programming languages translators and development environments,Terminal,13,2,false,l13,multiple-choice,languages-and-idEs,"Why do computers need translators to run programs written in high-level languages?","Processors only understand binary instructions",2025-05-05T00:00:00Z,"High-level languages use words and symbols that humans can understand but processors cannot. They must be translated into binary machine code using a compiler or interpreter so that the processor can execute the instructions.","[""High-level languages use too much memory"" ""Processors only understand binary instructions"" ""Compilers are faster than interpreters"" ""Code written by users needs to be checked""]",,1 